b4d8f09013f3bfa10c1626ba6ffedd1d
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const Aggregate_1 = __importDefault(require("@shared/domain/Aggregate"));
const UuidVo_1 = __importDefault(require("@shared/domain/UuidVo"));
const PhoneVo_1 = __importDefault(require("@shared/domain/PhoneVo"));
const CommerceNameVo_1 = __importDefault(require("@backoffice-contexts/commerces/domain/CommerceNameVo"));
const EmailVo_1 = __importDefault(require("@shared/domain/EmailVo"));
const CommerceDescriptionVo_1 = __importDefault(require("@backoffice-contexts/commerces/domain/CommerceDescriptionVo"));
const AddressVo_1 = __importDefault(require("@shared/domain/AddressVo"));
const CommerceCreatedEvent_1 = __importDefault(require("@backoffice-contexts/commerces/domain/CommerceCreatedEvent"));
const CommerceDeletedEvent_1 = __importDefault(require("@backoffice-contexts/commerces/domain/CommerceDeletedEvent"));
class Commerce extends Aggregate_1.default {
    constructor(id, name, email, description, phone, address) {
        super();
        this.id = id;
        this.name = name;
        this.email = email;
        this.description = description;
        this.phone = phone;
        this.address = address;
    }
    static create(id, name, email, description, phone, address) {
        const commerce = new Commerce(id, name, email, description, phone, address);
        commerce.record(new CommerceCreatedEvent_1.default(commerce.toPrimitives()));
        return commerce;
    }
    static fromPrimitives({ address, phone, name, description, id, email }) {
        return new Commerce(new UuidVo_1.default(id), new CommerceNameVo_1.default(name), new EmailVo_1.default(email), new CommerceDescriptionVo_1.default(description), new PhoneVo_1.default(phone), new AddressVo_1.default(address));
    }
    toPrimitives() {
        return {
            id: this.id.value,
            name: this.name.value,
            email: this.email.value,
            description: this.description.value,
            phone: this.phone.value,
            address: this.address.value,
        };
    }
    delete() {
        this.record(new CommerceDeletedEvent_1.default(this.toPrimitives()));
    }
}
exports.default = Commerce;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL2hvbWUvcGF0cmljay9Eb3dubG9hZHMvTm96b21hQ0RBL3NyYy9jb250ZXh0cy9iYWNrb2ZmaWNlL2NvbW1lcmNlcy9kb21haW4vQ29tbWVyY2UudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSx5RUFBaUQ7QUFDakQsbUVBQTJDO0FBQzNDLHFFQUE2QztBQUM3QywwR0FBa0Y7QUFDbEYscUVBQTZDO0FBQzdDLHdIQUFnRztBQUNoRyx5RUFBaUQ7QUFFakQsc0hBQThGO0FBQzlGLHNIQUE4RjtBQUU5RixNQUFxQixRQUFTLFNBQVEsbUJBQVM7SUFDM0MsWUFDYSxFQUFVLEVBQ1YsSUFBb0IsRUFDcEIsS0FBYyxFQUNkLFdBQWtDLEVBQ2xDLEtBQWMsRUFDZCxPQUFrQjtRQUUzQixLQUFLLEVBQUUsQ0FBQztRQVBDLE9BQUUsR0FBRixFQUFFLENBQVE7UUFDVixTQUFJLEdBQUosSUFBSSxDQUFnQjtRQUNwQixVQUFLLEdBQUwsS0FBSyxDQUFTO1FBQ2QsZ0JBQVcsR0FBWCxXQUFXLENBQXVCO1FBQ2xDLFVBQUssR0FBTCxLQUFLLENBQVM7UUFDZCxZQUFPLEdBQVAsT0FBTyxDQUFXO0lBRy9CLENBQUM7SUFFRCxNQUFNLENBQUMsTUFBTSxDQUNULEVBQVUsRUFDVixJQUFvQixFQUNwQixLQUFjLEVBQ2QsV0FBa0MsRUFDbEMsS0FBYyxFQUNkLE9BQWtCO1FBRWxCLE1BQU0sUUFBUSxHQUFHLElBQUksUUFBUSxDQUN6QixFQUFFLEVBQ0YsSUFBSSxFQUNKLEtBQUssRUFDTCxXQUFXLEVBQ1gsS0FBSyxFQUNMLE9BQU8sQ0FDVixDQUFDO1FBQ0YsUUFBUSxDQUFDLE1BQU0sQ0FBQyxJQUFJLDhCQUFvQixDQUFDLFFBQVEsQ0FBQyxZQUFZLEVBQUUsQ0FBQyxDQUFDLENBQUM7UUFDbkUsT0FBTyxRQUFRLENBQUM7SUFDcEIsQ0FBQztJQUVELE1BQU0sQ0FBQyxjQUFjLENBQUMsRUFDbEIsT0FBTyxFQUNQLEtBQUssRUFDTCxJQUFJLEVBQ0osV0FBVyxFQUNYLEVBQUUsRUFDRixLQUFLLEVBQ1k7UUFDakIsT0FBTyxJQUFJLFFBQVEsQ0FDZixJQUFJLGdCQUFNLENBQUMsRUFBRSxDQUFDLEVBQ2QsSUFBSSx3QkFBYyxDQUFDLElBQUksQ0FBQyxFQUN4QixJQUFJLGlCQUFPLENBQUMsS0FBSyxDQUFDLEVBQ2xCLElBQUksK0JBQXFCLENBQUMsV0FBVyxDQUFDLEVBQ3RDLElBQUksaUJBQU8sQ0FBQyxLQUFLLENBQUMsRUFDbEIsSUFBSSxtQkFBUyxDQUFDLE9BQU8sQ0FBQyxDQUN6QixDQUFBO0lBQ0wsQ0FBQztJQUVELFlBQVk7UUFDUixPQUFPO1lBQ0gsRUFBRSxFQUFFLElBQUksQ0FBQyxFQUFFLENBQUMsS0FBSztZQUNqQixJQUFJLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLO1lBQ3JCLEtBQUssRUFBRSxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUs7WUFDdkIsV0FBVyxFQUFFLElBQUksQ0FBQyxXQUFXLENBQUMsS0FBSztZQUNuQyxLQUFLLEVBQUUsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLO1lBQ3ZCLE9BQU8sRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUs7U0FDOUIsQ0FBQztJQUNOLENBQUM7SUFFRCxNQUFNO1FBQ0YsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLDhCQUFvQixDQUFDLElBQUksQ0FBQyxZQUFZLEVBQUUsQ0FBQyxDQUFDLENBQUE7SUFDOUQsQ0FBQztDQUVKO0FBakVELDJCQWlFQyIsIm5hbWVzIjpbXSwic291cmNlcyI6WyIvaG9tZS9wYXRyaWNrL0Rvd25sb2Fkcy9Ob3pvbWFDREEvc3JjL2NvbnRleHRzL2JhY2tvZmZpY2UvY29tbWVyY2VzL2RvbWFpbi9Db21tZXJjZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQWdncmVnYXRlIGZyb20gJ0BzaGFyZWQvZG9tYWluL0FnZ3JlZ2F0ZSc7XG5pbXBvcnQgVXVpZFZvIGZyb20gJ0BzaGFyZWQvZG9tYWluL1V1aWRWbyc7XG5pbXBvcnQgUGhvbmVWbyBmcm9tICdAc2hhcmVkL2RvbWFpbi9QaG9uZVZvJztcbmltcG9ydCBDb21tZXJjZU5hbWVWbyBmcm9tICdAYmFja29mZmljZS1jb250ZXh0cy9jb21tZXJjZXMvZG9tYWluL0NvbW1lcmNlTmFtZVZvJztcbmltcG9ydCBFbWFpbFZvIGZyb20gJ0BzaGFyZWQvZG9tYWluL0VtYWlsVm8nO1xuaW1wb3J0IENvbW1lcmNlRGVzY3JpcHRpb25WbyBmcm9tICdAYmFja29mZmljZS1jb250ZXh0cy9jb21tZXJjZXMvZG9tYWluL0NvbW1lcmNlRGVzY3JpcHRpb25Wbyc7XG5pbXBvcnQgQWRkcmVzc1ZvIGZyb20gJ0BzaGFyZWQvZG9tYWluL0FkZHJlc3NWbyc7XG5pbXBvcnQgeyBDb21tZXJjZVByaW1pdGl2ZXMgfSBmcm9tICdAYmFja29mZmljZS1jb250ZXh0cy9jb21tZXJjZXMvZG9tYWluL0NvbW1lcmNlUHJpbWl0aXZlcyc7XG5pbXBvcnQgQ29tbWVyY2VDcmVhdGVkRXZlbnQgZnJvbSAnQGJhY2tvZmZpY2UtY29udGV4dHMvY29tbWVyY2VzL2RvbWFpbi9Db21tZXJjZUNyZWF0ZWRFdmVudCc7XG5pbXBvcnQgQ29tbWVyY2VEZWxldGVkRXZlbnQgZnJvbSBcIkBiYWNrb2ZmaWNlLWNvbnRleHRzL2NvbW1lcmNlcy9kb21haW4vQ29tbWVyY2VEZWxldGVkRXZlbnRcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ29tbWVyY2UgZXh0ZW5kcyBBZ2dyZWdhdGUge1xuICAgIGNvbnN0cnVjdG9yKFxuICAgICAgICByZWFkb25seSBpZDogVXVpZFZvLFxuICAgICAgICByZWFkb25seSBuYW1lOiBDb21tZXJjZU5hbWVWbyxcbiAgICAgICAgcmVhZG9ubHkgZW1haWw6IEVtYWlsVm8sXG4gICAgICAgIHJlYWRvbmx5IGRlc2NyaXB0aW9uOiBDb21tZXJjZURlc2NyaXB0aW9uVm8sXG4gICAgICAgIHJlYWRvbmx5IHBob25lOiBQaG9uZVZvLFxuICAgICAgICByZWFkb25seSBhZGRyZXNzOiBBZGRyZXNzVm8sXG4gICAgKSB7XG4gICAgICAgIHN1cGVyKCk7XG4gICAgfVxuXG4gICAgc3RhdGljIGNyZWF0ZShcbiAgICAgICAgaWQ6IFV1aWRWbyxcbiAgICAgICAgbmFtZTogQ29tbWVyY2VOYW1lVm8sXG4gICAgICAgIGVtYWlsOiBFbWFpbFZvLFxuICAgICAgICBkZXNjcmlwdGlvbjogQ29tbWVyY2VEZXNjcmlwdGlvblZvLFxuICAgICAgICBwaG9uZTogUGhvbmVWbyxcbiAgICAgICAgYWRkcmVzczogQWRkcmVzc1ZvLFxuICAgICk6IENvbW1lcmNlIHtcbiAgICAgICAgY29uc3QgY29tbWVyY2UgPSBuZXcgQ29tbWVyY2UoXG4gICAgICAgICAgICBpZCxcbiAgICAgICAgICAgIG5hbWUsXG4gICAgICAgICAgICBlbWFpbCxcbiAgICAgICAgICAgIGRlc2NyaXB0aW9uLFxuICAgICAgICAgICAgcGhvbmUsXG4gICAgICAgICAgICBhZGRyZXNzLFxuICAgICAgICApO1xuICAgICAgICBjb21tZXJjZS5yZWNvcmQobmV3IENvbW1lcmNlQ3JlYXRlZEV2ZW50KGNvbW1lcmNlLnRvUHJpbWl0aXZlcygpKSk7XG4gICAgICAgIHJldHVybiBjb21tZXJjZTtcbiAgICB9XG5cbiAgICBzdGF0aWMgZnJvbVByaW1pdGl2ZXMoe1xuICAgICAgICBhZGRyZXNzLFxuICAgICAgICBwaG9uZSxcbiAgICAgICAgbmFtZSxcbiAgICAgICAgZGVzY3JpcHRpb24sXG4gICAgICAgIGlkLFxuICAgICAgICBlbWFpbFxuICAgIH06IENvbW1lcmNlUHJpbWl0aXZlcyk6IENvbW1lcmNlIHtcbiAgICAgICAgcmV0dXJuIG5ldyBDb21tZXJjZShcbiAgICAgICAgICAgIG5ldyBVdWlkVm8oaWQpLFxuICAgICAgICAgICAgbmV3IENvbW1lcmNlTmFtZVZvKG5hbWUpLFxuICAgICAgICAgICAgbmV3IEVtYWlsVm8oZW1haWwpLFxuICAgICAgICAgICAgbmV3IENvbW1lcmNlRGVzY3JpcHRpb25WbyhkZXNjcmlwdGlvbiksXG4gICAgICAgICAgICBuZXcgUGhvbmVWbyhwaG9uZSksXG4gICAgICAgICAgICBuZXcgQWRkcmVzc1ZvKGFkZHJlc3MpXG4gICAgICAgIClcbiAgICB9XG5cbiAgICB0b1ByaW1pdGl2ZXMoKTogQ29tbWVyY2VQcmltaXRpdmVzIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIGlkOiB0aGlzLmlkLnZhbHVlLFxuICAgICAgICAgICAgbmFtZTogdGhpcy5uYW1lLnZhbHVlLFxuICAgICAgICAgICAgZW1haWw6IHRoaXMuZW1haWwudmFsdWUsXG4gICAgICAgICAgICBkZXNjcmlwdGlvbjogdGhpcy5kZXNjcmlwdGlvbi52YWx1ZSxcbiAgICAgICAgICAgIHBob25lOiB0aGlzLnBob25lLnZhbHVlLFxuICAgICAgICAgICAgYWRkcmVzczogdGhpcy5hZGRyZXNzLnZhbHVlLFxuICAgICAgICB9O1xuICAgIH1cblxuICAgIGRlbGV0ZSgpOiB2b2lkIHtcbiAgICAgICAgdGhpcy5yZWNvcmQobmV3IENvbW1lcmNlRGVsZXRlZEV2ZW50KHRoaXMudG9QcmltaXRpdmVzKCkpKVxuICAgIH1cblxufVxuIl0sInZlcnNpb24iOjN9